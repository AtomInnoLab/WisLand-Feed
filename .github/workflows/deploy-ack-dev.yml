name: deploy_ali_ack-dev

on:
  push:
    branches: [dev]
  pull_request_target:
    branches: [dev]
    types: [closed]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

env:
  KUBECTL_VERSION: v1.32.2
  NAMESPACE: dev-ns
  REPO_NS: mxrag-dev
  REGION_ID: ap-southeast-1
  DEPLOYMENT: wisland-feed-dev

  REPO: ${{ secrets.ALI_DOCKER_REGISTRY }}
  REPO_USER: ${{ secrets.ALI_DOCKER_REGISTRY_USERNAME_PENGHAO }}
  REPO_PASSWD: ${{ secrets.ALI_DOCKER_REGISTRY_PASSWD_PENGHAO }}
  FEISHU_WEBHOOK_URL_DEV: ${{ secrets.FEISHU_WEBHOOK_URL_DEV }}
  KUBECONFIG_DEV: ${{ secrets.KUBECONFIG_DEV }}

jobs:
  deploy_to_dev:
    # ‰ªÖÂú®‰ª•‰∏ãÊÉÖÂÜµËøêË°åÔºö
    # 1. push Âà∞ devÔºàgithub.event_name == 'push'Ôºâ
    # 2. PR ÂêàÂπ∂Âà∞ devÔºàgithub.event_name == 'pull_request_target' ‰∏î merged == trueÔºâ
    # 3. ÊâãÂä®Ëß¶ÂèëÔºàgithub.event_name == 'workflow_dispatch'Ôºâ
    if: |
      github.event_name == 'push' ||
      (github.event_name == 'pull_request_target' && github.event.pull_request.merged == true) ||
      github.event_name == 'workflow_dispatch'
    name: build_and_push
    permissions:
      contents: write
    runs-on: [ubuntu-22.04]
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust-stable
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: 1.88.0
          override: true
      
      - name: Set proxy
        run: |
          rm -rf ~/.gitconfig || true
          git config --global url."https://${{ secrets.GH_ACCESS_TOKEN }}@github.com".insteadOf ssh://git@github.com
          git config --global credential.helper store

      - name: Building
        shell: bash
        run: cargo build -r

      - name: Generate Docker Tag
        id: docker_tag
        run: |
          datetime_now=$(TZ='Asia/Shanghai' date "+%Y%m%d%H%M%S")
          echo "DOCKER_TAG=${datetime_now}" >> $GITHUB_ENV

      - name: Log in to Aliyun ACR
        run: |
          docker login \
            -u ${{ env.REPO_USER }} \
            -p ${{ env.REPO_PASSWD }} \
            ${{ env.REPO }}

      - name: Build and Push Docker Image
        run: |
          sudo apt-get update && sudo apt-get install -y retry
          docker build --build-arg APP_PROFILE=dev -f Dockerfile.server -t ${{ env.REPO }}/${{ env.REPO_NS }}/${{ env.DEPLOYMENT }}:server-${{ env.DOCKER_TAG }} .
          docker build --build-arg APP_PROFILE=dev -f Dockerfile.worker -t ${{ env.REPO }}/${{ env.REPO_NS }}/${{ env.DEPLOYMENT }}:worker-${{ env.DOCKER_TAG }} .
          retry -t 5 -- docker push ${{ env.REPO }}/${{ env.REPO_NS }}/${{ env.DEPLOYMENT }}:server-${{ env.DOCKER_TAG }}
          retry -t 5 -- docker push ${{ env.REPO }}/${{ env.REPO_NS }}/${{ env.DEPLOYMENT }}:worker-${{ env.DOCKER_TAG }}

      - name: Setup kubectl
        uses: ./.github/actions/setup-kubectl-ack
        with:
          kubectl-version: ${{ env.KUBECTL_VERSION }}
          kubeconfig-env: ${{ env.KUBECONFIG_DEV }}

      - name: Update
        run: |
          kubectl -n "${{ env.NAMESPACE }}" set image deployment/${{ env.DEPLOYMENT }} \
            ${{ env.DEPLOYMENT }}-server=${{ env.REPO }}/${{ env.REPO_NS }}/${{ env.DEPLOYMENT }}:server-${{ env.DOCKER_TAG }} \
            ${{ env.DEPLOYMENT }}-worker=${{ env.REPO }}/${{ env.REPO_NS }}/${{ env.DEPLOYMENT }}:server-${{ env.DOCKER_TAG }}

      - name: Notify Feishu - update
        uses: ./.github/actions/send-feishu
        with:
          webhook: ${{ env.FEISHU_WEBHOOK_URL_DEV }}
          status-emoji: "üü¢"
          title: "ACK: ${{ env.DEPLOYMENT }} released"
          details: "‰ªìÂ∫ì: ${{ github.repository }}%0AÂàÜÊîØ: ${{ github.ref_name }}%0AÊèê‰∫§: ${{ github.sha }}%0AÈïúÂÉè: ${{ env.DOCKER_TAG }}"

  notify_failed_job:
    name: notify_failed_job
    needs: [deploy_to_dev]
    if: always() && needs.deploy_to_dev.result == 'failure'
    runs-on: [ubuntu-22.04]
    steps:
      - uses: actions/checkout@v4
      
      - name: Notify Feishu - failed
        uses: ./.github/actions/send-feishu
        with:
          webhook: ${{ env.FEISHU_WEBHOOK_URL_DEV }}
          status-emoji: "üî¥"
          title: "ACK: ${{ env.DEPLOYMENT }} failed"
          details: "‰ªìÂ∫ì: ${{ github.repository }}%0AÂàÜÊîØ: ${{ github.ref_name }}%0AÊèê‰∫§: ${{ github.sha }}"